###Basic Commands ##########

import libraries :  
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df.columns : shows all columns 

name columns/ agar name nahi ho column ko
df.columns = ['colname','colname','colname','colname','colname'] 

df.dtypes : shows all data types
df.describe() : shows count mean std 25 50 75 percent of data 
df.shape : prints the rows and columns

df1 = df.rename(columns={'oldcolname ': 'newcol name'}) : renaming column

Counting values in each column:
df["colname"].value_counts() ->normal

function wala:
for i in df:
    print(df[i].value_counts()) 

## DATA PREPROCESSING ####
null values
df.isnull().sum() 

Filling Null Values : 
mean = df['colname'].mean()
df['colname'].fillna(mean, inplace = True)

Dropping null values:
df1 = df.dropna()

Dropping "?" charecters 
by function 
for i in df:
    df=df.drop(df[df[i]=="?"].index)

normal 
df1 = df.drop(df[df["col name"]=="?"].index , axis =0 )


##### Data visualization ######
1. ploting histogram
plt.hist(df["colname"]) ---> basic 

detailed
plt.figure(figsize=(8, 6))
plt.hist(df['col name'], bins=10, color='skyblue')
plt.xlabel('Label name')
plt.ylabel('label name')
plt.title('title')
plt.show()

2. dot plots 

sns.stripplot(data=df["colname"],color="blue",size=5) ---> basic 

detailed 
plt.figure(figsize=(8, 6))
sns.stripplot(x='colname', y='colname', data=df, jitter=True)
plt.xlabel('col name')
plt.ylabel('col name')
plt.title('title ')
plt.show()


3. Bar Plots 
basic 
first do value count check how many values are presnt 
then assign all in labels in array 

labels=["ls","s","m","h","vh"]
plt.bar(labels,count)
plt.xlabel("num")
plt.ylabel("count")
plt.plot()

detailed 
plt.figure(figsize=(8, 6))
df['col name '].value_counts().plot(kind='bar', color='lightgreen')
plt.xlabel('label')
plt.ylabel('ylabel')
plt.title('title')
plt.show()


4. line chart 
basic 
plt.xlabel("col name")
plt.ylabel("col name")
plt.plot(x,y)



5. Multivariate Analysis using Scatter Plots

plt.scatter(df["col1"],df["col2"],c=df["col3"])
plt.xlabel("col1")
plt.ylabel("col2")
plt.colorbar(label="col3")
plt.plot()


6. Pie chart 

plt.pie(df["col"].value_counts().values,
        labels=["ls","s","m","ms","ms"],
        autopct="%1.1f%%")
plt.plot()

7. box plot 

sns.boxplot(data=[df["col1"],df["col2"],df["col3"]])

8. Scatter plot 

plt.scatter(df["col1"],df["col2"])
plt.xlabel("col1")
plt.ylabel("col2")

9. Heat Map
heat map 
correleation = select_df.corr()
sns.heatmap(correleation, annot=True)
plt.title('title')
plt.show()